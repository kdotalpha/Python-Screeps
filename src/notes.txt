Yeah, attacking the economy is definitely a very valid strategy. Just understand though that if he has credits, other rooms, friends or worse yet an alliance and of course a terminal in that room, if his code is good he could entertain you for days, if not weeks.
The average player doesn't have a big buffer... and towers are really a huge drain on economy if you keep them shooting constantly. Speaking of which I forgot to mention, draining towers is best done from the furthest distance possible from the tower(s). You'll get less damage that way.
Also very important, keep an eye out on his AI's behavior. What does his towers shoot at? Closest? Healer? Lowest health? Most players just shoot the closest... Means that you can have a pair of healers healing each other crawl up near the towers and have other cheaper creeps just sneak by and do mayhem.
Does he fill towers before filling spawns/extensions? If so, you might not even need to drain him fully... Just keep him busy filling towers and watch all his creeps die because none are filling spawns/extensions....
Does he go for energy drops? Try dismantling a wall, or having a hauler drop a load of energy outside the walls... Does he send creeps to pick it up, totally ignoring your creeps in the room? If so, lure them out, pick them off, drain his economy and keep his spawns busy.

Most players are super easy to beat... Just a matter of paying attention to small details.
    
    BODYPART_COST: {
        "move": 50,
        "work": 100,
        "attack": 80,
        "carry": 50,
        "heal": 250,
        "ranged_attack": 150,
        "tough": 10,
        "claim": 600
    },

        """        
        Game.creeps["33493059"].room.getTerrain().get(Game.spawns["Spawn1"].pos.x, Game.spawns["Spawn1"].pos.y)
        0
        Game.creeps["33493059"].room.getTerrain().get(Game.spawns["Spawn1"].pos.x, Game.spawns["Spawn1"].pos.y-2)
        1
        """

move move move move work work carry carry 

module.exports.loop = function () {

    for(var name in Game.creeps) {
        var creep = Game.creeps[name];
        console.log("Creep Name: ", name, " - Store: ", creep.store.getFreeCapacity())
    }
}

Game.creeps["33493059"].room.getTerrain().get(Game.spawns["Spawn1"].pos.x, Game.spawns["Spawn1"].pos.y)
0
Game.creeps["33493059"].room.getTerrain().get(Game.spawns["Spawn1"].pos.x, Game.spawns["Spawn1"].pos.y-2)
1

module.exports.loop = function () {

  for (var creep_name in Game.creeps) 
  {
        if (creep_name == "Builder1")
        { 
            var creep = Game.creeps[creep_name];
            console.log(creep_name)
        }
  }
}


            var targets = creep.room.find(FIND_CONSTRUCTION_SITES);
            if (targets.length)
            {
                for (var site in targets)
                {
                    console.log(site.store);
                }
            }
        }
  }
        
        

def GetCreepByName(name):
    for creep_name in Object.keys(Game.creeps):
        if creep_name == name:
            return Game.creeps[name]


var roleBuilder = {

    /** @param {Creep} creep **/
    run: function(creep) {

	    if(creep.memory.building && creep.store[RESOURCE_ENERGY] == 0) {
            creep.memory.building = false;
            creep.say('ðŸ”„ harvest');
	    }
	    if(!creep.memory.building && creep.store.getFreeCapacity() == 0) {
	        creep.memory.building = true;
	        creep.say('ðŸš§ build');
	    }

	    if(creep.memory.building) {
	        var targets = creep.room.find(FIND_CONSTRUCTION_SITES);
            if(targets.length) {
                if(creep.build(targets[0]) == ERR_NOT_IN_RANGE) {
                    creep.moveTo(targets[0], {visualizePathStyle: {stroke: '#ffffff'}});
                }
            }
	    }
	    else {
	        var sources = creep.room.find(FIND_SOURCES);
            if(creep.harvest(sources[0]) == ERR_NOT_IN_RANGE) {
                creep.moveTo(sources[0], {visualizePathStyle: {stroke: '#ffaa00'}});
            }
	    }
	}
};

module.exports = roleBuilder;


"""     
    # Run each creep
    for name in Object.keys(Game.creeps):
        creep = Game.creeps[name]
        harvester.run_harvester(creep)

    # Run each spawn
    for name in Object.keys(Game.spawns):
        spawn = Game.spawns[name]
        if not spawn.spawning:
            # Get the number of our creeps in the room.
            num_creeps = _.sum(Game.creeps, lambda c: c.pos.roomName == spawn.pos.roomName)
            # If there are no creeps, spawn a creep once energy is at 250 or more
            if num_creeps < 0 and spawn.room.energyAvailable >= 250:
                spawn.createCreep([WORK, CARRY, MOVE, MOVE])
            # If there are less than 15 creeps but at least one, wait until all spawns and extensions are full before
            # spawning.
            elif num_creeps < 15 and spawn.room.energyAvailable >= spawn.room.energyCapacityAvailable:
                # If we have more energy, spawn a bigger creep.
                if spawn.room.energyCapacityAvailable >= 350:
                    spawn.createCreep([WORK, CARRY, CARRY, MOVE, MOVE, MOVE])
                else:
                    spawn.createCreep([WORK, CARRY, MOVE, MOVE]) """